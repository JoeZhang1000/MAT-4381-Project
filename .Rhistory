fit
summary(fit)
library(MPV)
DeliveryData <- p8.3
DeliveryData$x3 <- 0
DeliveryData$x4 <- 0
DeliveryData$x5 <- 0
DeliveryData$x3[1:7] <- 1
DeliveryData$x4[8:17] <- 1
DeliveryData$x5[18:23] <- 1
View(DeliveryData)
fit <- lm(y~x1+x2+x3+x4+x5, data=DeliveryData)
fit
summary(fit)
library(MPV)
DeliveryData <- p8.3
DeliveryData$x3 <- 0
DeliveryData$x4 <- 0
DeliveryData$x5 <- 0
DeliveryData$x3[1:7] <- 1
DeliveryData$x4[8:17] <- 1
DeliveryData$x5[18:23] <- 1
fit <- lm(y~x1+x2+x3+x4+x5, data=DeliveryData)
fit
summary(fit)
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
anova(reduced_model, full_model)
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
summary(reduced_model)
anova(reduced_model, full_model)
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
summary(reduced_model)
anova(reduced_model, full_model)
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
summary(reduced_model)
anova(reduced_model, full_model)
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
print(summary(reduced_model))
anova(reduced_model, full_model)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
print(summary(reduced_model))
anova(reduced_model, full_model)
plot(fit)
library(olsrr)
library(glmnet)
library("MASS")
set.seed(1)
Hald <- read.table("~/Downloads/Hald.txt", header=TRUE, sep="\t")
x <- data.matrix(Hald[,c('X1','X2','X3', 'X4')])
y <- Hald$Y
plot(lm.ridge(Y ~ X1 + X2 + X3 + X4, data = Hald, lambda=seq(0,3,0.0001)))
model <- glmnet(x, y, alpha = 0)
cv_model=cv.glmnet(x,y,alpha=0)
plot(cv_model)
best_lambda=cv_model$lambda.min
print(best_lambda)
library(olsrr)
library(glmnet)
library("MASS")
set.seed(1)
Hald <- read.table("~/Downloads/Hald.txt", header=TRUE, sep="\t")
x <- data.matrix(Hald[,c('X1','X2','X3', 'X4')])
y <- Hald$Y
model <- glmnet(x, y, alpha = 0)
cv_model=cv.glmnet(x,y,alpha=0)
plot(cv_model)
best_lambda=cv_model$lambda.min
print(best_lambda)
library(olsrr)
library(glmnet)
library("MASS")
set.seed(1)
Hald <- read.table("~/Downloads/Hald.txt", header=TRUE, sep="\t")
x <- data.matrix(Hald[,c('X1','X2','X3', 'X4')])
y <- Hald$Y
model <- glmnet(x, y, alpha = 0)
cv_model=cv.glmnet(x,y,alpha=0)
plot(cv_model)
best_lambda=cv_model$lambda.min
print(best_lambda)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
anova(base_model)
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
library(olsrr)
thermalData <- table.b2
model=lm(y~x1+x2+x3+x4+x5,data=thermalData)
ols_step_forward_p(model, details = TRUE)
library(olsrr)
thermalData <- table.b2
ols_step_forward_p(model, details = TRUE)
ols_step_backward_p(model, details = TRUE)
ols_step_best_subset(model, details=TRUE)
ols_step_both_p(model, details=TRUE)
ols_step_both_p(model, details=TRUE)
help(ols_step_both_p)
metrics(ols_step_both_p(model, details=FALSE))
print(ols_step_both_p(model, details=FALSE)$metrics)
library(olsrr)
thermalData <- table.b2
model <- lm(y~., data=table.b2)
ols_step_forward_p(model, details = TRUE)
library(olsrr)
thermalData <- table.b2
model <- lm(y~., data=table.b2)
ols_step_forward_p(model, details = TRUE)
ols_step_backward_p(model, details = TRUE)
ols_step_both_p(model, details=TRUE)
K <- ols_step_all_possible(model, details=TRUE)
print(K)
plot(K)
?ols_step_both_p
help(ols_step_both_p)
help(ols_step_both_p)
help(ols_step_both_p)
help(ols_step_both_p)
help(ols_step_both_p)
help(ols_step_both_p)
help(ols_step_both_p)
source("~/Desktop/Assignment 1 - MAT3373/Untitled.R")
help("ols_step_both_p")
K <- ols_step_all_possible(model, details=TRUE)
print(K)
plot(K)
K <- ols_step_all_possible(model, details=TRUE)
View(K)
print(K)
plot(K)
ols_coll_diag(model)
full_model=lm(y~x1+x2+x3+x4+x5,data=thermalData)
anova(full_model)
summary(full_model)
reduced_model =lm(y~x1+x2+x3+x4,data=thermalData)
anova(reduced_model)
summary(reduced_model)
library(MPV)
AircraftData <- p13.3
X=AircraftData$x
X_squared = X*X
n=AircraftData$n
r=AircraftData$r
Y=r/n
mlogit=glm(Y~X,weights=n,family="binomial")
p_value <- 1 - pchisq(mlogit$deviance, df.residual(mlogit))
p_value
summary(mlogit)
plot(mlogit)
library(MPV)
AircraftData <- p13.3
X=AircraftData$x
X_squared = X*X
n=AircraftData$n
Y=AircraftData$r
p=r/n
mlogit=glm(p~X,weights=n,family="binomial")
p_value <- 1 - pchisq(mlogit$deviance, df.residual(mlogit))
p_value
summary(mlogit)
X_squared = X*X
mlogit_squared_term=glm(Y~ X + X_squared,weights=n,family="binomial")
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
p_value <- 1 - pchisq(1, 0.08821)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
p_value <- 1 - pchisq(0.08821, 1)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
p_value <- 1 - pchisq(0.08821, 1)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
print(qchisq(0.05, 1, lower.tail = TRUE))
p_value <- 1 - pchisq(0.08821, 1)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
print(qchisq(0.05, 1, lower.tail = FALSE))
p_value <- 1 - pchisq(0.08821, 1)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
p_value <- 1 - pchisq(0.08821, 1)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
summary(mlogit_squared_term)
confint(mlogit_squared_term)
K <- ols_step_all_possible(model, details=TRUE)
print(K)
plot(K)
library(MPV)
DeliveryData <- p8.3
DeliveryData$x3 <- 0
DeliveryData$x4 <- 0
DeliveryData$x5 <- 0
DeliveryData$x3[1:7] <- 1
DeliveryData$x4[8:17] <- 1
DeliveryData$x5[18:23] <- 1
fit <- lm(y~x1+x2+x3+x4+x5, data=DeliveryData)
fit
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
print(summary(reduced_model))
anova(reduced_model, full_model)
library(olsrr)
library(glmnet)
library("MASS")
set.seed(1)
Hald <- read.table("~/Downloads/Hald.txt", header=TRUE, sep="\t")
x <- data.matrix(Hald[,c('X1','X2','X3', 'X4')])
y <- Hald$Y
model <- glmnet(x, y, alpha = 0)
cv_model=cv.glmnet(x,y,alpha=0)
plot(cv_model)
best_lambda=cv_model$lambda.min
print(best_lambda)
best_model <- glmnet(x, y, alpha = 0, lambda = best_lambda)
coef(best_model)
summary(best_model)
predictions <- predict(best_model, s = best_lambda, newx = x, type = "response")
SSE <- sum((predictions - y) ^ 2)
SST <- sum((y - mean(y)) ^ 2)
R_squared <- 1 - (SSE/SST)
print(R_squared)
print(SSE)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
anova(base_model)
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
anova(base_model)
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
print(anova(base_model))
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
library(olsrr)
thermalData <- table.b2
model <- lm(y ~ ., data=table.b2)
ols_step_forward_p(model, details = TRUE)
ols_step_backward_p(model, details = TRUE)
ols_step_both_p(model, details=TRUE)
ols_step_both_p(model, details=TRUE)
K <- ols_step_all_possible(model, details=TRUE)
print(K)
plot(K)
ols_coll_diag(model)
full_model=lm(y~x1+x2+x3+x4+x5,data=thermalData)
anova(full_model)
summary(full_model)
reduced_model =lm(y~x1+x2+x3+x4,data=thermalData)
anova(reduced_model)
summary(reduced_model)
library(MPV)
AircraftData <- p13.3
X=AircraftData$x
X_squared = X*X
n=AircraftData$n
r=AircraftData$r
p=r/n
mlogit=glm(p~X,weights=n,family="binomial")
p_value <- 1 - pchisq(mlogit$deviance, df.residual(mlogit))
p_value
summary(mlogit)
reduced_model =lm(y~x1+x2+x3+x4,data=thermalData)
anova(reduced_model)
summary(reduced_model)
plot(reduced_model)
reduced_model =lm(y~x1+x2+x3+x4,data=thermalData)
anova(reduced_model)
summary(reduced_model)
plot(reduced_model)
plot(full_model)
library(MPV)
AircraftData <- p13.3
X=AircraftData$x
X_squared = X*X
n=AircraftData$n
r=AircraftData$r
p=r/n
mlogit=glm(p~X,weights=n,family="binomial")
p_value <- 1 - pchisq(mlogit$deviance, df.residual(mlogit))
p_value
summary(mlogit)
library(MPV)
AircraftData <- p13.3
X=AircraftData$x
X_squared = X*X
n=AircraftData$n
r=AircraftData$r
p=r/n
mlogit=glm(p~X,weights=n,family="binomial")
p_value <- 1 - pchisq(mlogit$deviance, df.residual(mlogit))
p_value
summary(mlogit)
p_value <- 1 - pchisq(mlogit$deviance, df.residual(mlogit))
p_value
p_value <- 1 - pchisq(mlogit$deviance, 8)
p_value
X_squared = X*X
mlogit_squared_term=glm(p~ X + X_squared,weights=n,family="binomial")
p_value <- 1 - pchisq(0.08821, 1)
p_value
summary(mlogit_squared_term)
plot(mlogit_squared_term)
summary(mlogit_squared_term)
confint(mlogit_squared_term)
K <- ols_step_all_possible(model, details=TRUE)
print(K)
plot(K)
source("~/Desktop/Assignment 1 - MAT3373/Untitled.R")
DeliveryData
knitr::opts_chunk$set(echo = TRUE)
library(MPV)
DeliveryData <- p8.3
DeliveryData$x3 <- 0
DeliveryData$x4 <- 0
DeliveryData$x5 <- 0
DeliveryData$x3[1:7] <- 1
DeliveryData$x4[8:17] <- 1
DeliveryData$x5[18:23] <- 1
fit <- lm(y~x1+x2+x3+x4+x5, data=DeliveryData)
fit
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
print(summary(reduced_model))
anova(reduced_model, full_model)
plot(fit)
library(olsrr)
knitr::opts_chunk$set(echo = TRUE)
library(MPV)
DeliveryData <- p8.3
DeliveryData$x3 <- 0
DeliveryData$x4 <- 0
DeliveryData$x5 <- 0
DeliveryData$x3[1:7] <- 1
DeliveryData$x4[8:17] <- 1
DeliveryData$x5[18:23] <- 1
fit <- lm(y~x1+x2+x3+x4+x5, data=DeliveryData)
fit
summary(fit)
full_model <- fit
reduced_model <- lm(y~x1+x2, data=DeliveryData)
print(summary(reduced_model))
anova(reduced_model, full_model)
plot(fit)
packages.install("olsrr")
plot(fit)
install.packages("olsrr")
library(olsrr)
library(glmnet)
library("MASS")
set.seed(1)
Hald <- read.table("~/Downloads/Hald.txt", header=TRUE, sep="\t")
x <- data.matrix(Hald[,c('X1','X2','X3', 'X4')])
y <- Hald$Y
model <- glmnet(x, y, alpha = 0)
cv_model=cv.glmnet(x,y,alpha=0)
plot(cv_model)
best_lambda=cv_model$lambda.min
print(best_lambda)
best_model <- glmnet(x, y, alpha = 0, lambda = best_lambda)
coef(best_model)
summary(best_model)
predictions <- predict(best_model, s = best_lambda, newx = x, type = "response")
SSE <- sum((predictions - y) ^ 2)
SST <- sum((y - mean(y)) ^ 2)
R_squared <- 1 - (SSE/SST)
print(R_squared)
print(SSE)
X <- Hald[, c("X1", "X2", "X3", "X4")]
base_model <- lm(Y~X1+X2+X3+X4, data=Hald)
summary(base_model)
print(anova(base_model))
56.11751 / 47.86
cor(X)
ols_coll_diag(base_model)
library(olsrr)
thermalData <- table.b2
model <- lm(y ~ ., data=table.b2)
ols_step_forward_p(model, details = FALSE)
ols_step_backward_p(model, details = TRUE)
K <- ols_step_all_possible(model, details=TRUE)
K <- ols_step_all_possible(model, details=TRUE)
K <- ols_step_all_possible(model, details=TRUE)
print(K)
ols_coll_diag(model)
library(olsrr)
thermalData <- table.b2
write.csv(thermalData, "~/Downloads/thermalData.csv", row.names = FALSE)
model <- lm(y ~ ., data=table.b2)
ols_step_forward_p(model, details = FALSE)
library(olsrr)
thermalData <- table.b2
print(thermalData)
write.csv(thermalData, "~/Downloads/thermalData.csv", row.names = FALSE)
model <- lm(y ~ ., data=table.b2)
ols_step_forward_p(model, details = FALSE)
library(olsrr)
thermalData <- table.b2
print(thermalData)
write.csv(thermalData, "~/Downloads/thermalData.csv", row.names = FALSE)
model <- lm(y ~ ., data=table.b2)
print(model)
ols_step_forward_p(model, details = FALSE)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_condaenv("base")
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_condaenv("base")
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_condaenv("base")
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_condaenv("base")
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_condaenv("base")
library(caret)
library(olsrr)
set.seed(1)
boston_housing_dataset <- read.csv("Boston.csv")
#Remove the indicator variable for river
boston_housing_dataset <- subset(boston_housing_dataset, select = -CHAS)
train_set_indices <- createDataPartition(boston_housing_dataset$MEDV, p = 0.6, list = FALSE)
train_set_dataset <- boston_housing_dataset[train_set_indices, ]
test_set_dataset <- boston_housing_dataset[-train_set_indices, ]
#For use in future Python code
write.csv(train_set_dataset, "train_set_dataset.csv", row.names = FALSE)
write.csv(test_set_dataset, "test_set_dataset.csv", row.names = FALSE)
full_model=lm(MEDV ~ .,data=train_set_dataset)
summary(full_model)
RSS <- residuals(full_model)^2
training_MSE <- mean(RSS)
cat("Training MSE:", training_MSE, "\n")
test_MSE <- mean((test_set_dataset$MEDV - predict(full_model, newdata=test_set_dataset))^2)
cat("Test MSE:", test_MSE)
full_model_summary <- summary(full_model)$coefficients
write.csv(data.frame(
betaEstimate = full_model_summary[, "Estimate"],
standardError = full_model_summary[, "Std. Error"],
lower95CIBound = confint(full_model, level = 0.95)[, "2.5 %"],
upper95CIBound = confint(full_model, level = 0.95)[, "97.5 %"]), "full_model_summary.csv", row.names = TRUE)
stepwise_model_results <- ols_step_both_p(full_model, details = FALSE, p_enter = 0.10, p_remove = 0.15)
print(stepwise_model_results)
stepwise_model <- lm(MEDV ~ CRIM + ZN + NX + RM + DIS + RAD + TAX + PTRATIO + B + LSTAT,
data = train_set_dataset)
summary(stepwise_model)
RSS <- residuals(stepwise_model)^2
training_MSE <- mean(RSS)
cat("Training MSE:", training_MSE, "\n")
test_MSE <- mean((test_set_dataset$MEDV - predict(stepwise_model, newdata=test_set_dataset))^2)
cat("Test MSE:", test_MSE)
reticulate::repl_python()
